<krpano showerrors="false">
    <!-- 预览作品xml -->
    <include url="common.xml" />

    <!-- vr模式 -->
    <!-- include VR support -->
    <include url="../plugins/webvr.xml" devices="html5" />

    <!-- overwrite some settings from the webvr.xml for the skin integration -->
    <plugin name="WebVR" keep="true" devices="html5"
            multireslock.desktop="true"
            multireslock.mobile.or.tablet="false"
            mobilevr_fake_support="true"
            onavailable="removelayer(webvr_enterbutton);webvr_onavailable();"
            onentervr="skin_showloading(false); webvr_onentervr(); webvr_setup();showhotspot_enterVR();"
            onexitvr="webvr_onexitvr(); webvr_setup();hidehotspot_enterVR()"
            />

    <!-- webvr button style (adjust to match default skin style) -->
    <style name="webvr_button_style"
           border="false"
           shadow="0.01" shadowrange="9.0" shadowcolor="0xFFFFFF" shadowalpha="0.5"
           />

    <!-- show a 'rotate the device' info when the mobile device is in portrait mode in VR mode -->
    <layer name="webvr_rotate_to_landscape_request" keep="true" vr="true" devices="mobile"
           url="../images/rotate_device.png" scale="0.5"
           align="top" edge="center" y="28%"
           autoalpha="true" alpha="0.0"
           enabled="false"
           />

    <events name="webvr_events" keep="true" devices="html5"
            onresize.mobile="webvr_act_as_gyro_in_portrait_mode();"
            onviewchange=""
            />

    <action name="webvr_setup">
        if(webvr.isenabled,
            set(display.hotspotrenderer, webgl);
            copy(loadscene_flags_backup, skin_settings.loadscene_flags);
            set(skin_settings.loadscene_flags, MERGE|KEEPVIEW|KEEPMOVING|NOPREVIEW);
            webvr_act_as_gyro_in_portrait_mode(true);
            if(scene.count GT 1,
                set(hotspot[webvr_prev_scene].visible, true);
                set(hotspot[webvr_next_scene].visible, true);
                set(events[webvr_events].onviewchange, webvr_menu_following());
              );
          ,
            set(display.hotspotrenderer, auto);
            if(loadscene_flags_backup !== null, copy(skin_settings.loadscene_flags, loadscene_flags_backup));
            tween(layer[webvr_rotate_to_landscape_request].alpha, 0.0, 0.0);
            set(hotspot[webvr_prev_scene].visible, false);
            set(hotspot[webvr_next_scene].visible, false);
            set(events[webvr_events].onviewchange, null);
          );
    </action>

    <action name="webvr_act_as_gyro_in_portrait_mode">
        if(device.mobile AND webvr.isenabled,
            div(aspect, stagewidth, stageheight);
            if(aspect != lastaspect OR '%1' == 'true',
                copy(lastaspect, aspect);
                if(stagewidth GT stageheight,
                    <!-- landscape mode - use stereo rendering and a direct/fast gyro sensor mode -->
                    set(display.stereo, true);
                    set(webvr.mobilevr_sensor_mode, 3);
                    webvr.update();
                    tween(layer[webvr_rotate_to_landscape_request].alpha, 0.0, 0.0);
                  ,
                    <!-- portrait mode - use normal rendering and a smoother/slower gyro sensor mode -->
                    set(display.stereo, false);
                    set(webvr.mobilevr_sensor_mode, 1);
                    webvr.update();
                    tween(layer[webvr_rotate_to_landscape_request].alpha, 1.0);
                    delayedcall(3.0, tween(layer[webvr_rotate_to_landscape_request].alpha, 0.0, 1.0); );
                  );
              );
          ,
            set(lastaspect, 0);
          );
    </action>

    <!-- VR scene switching hotspots -->
    <!-- <style name="webvr_menu_style" depth="800" scale="0.5" distorted="true" ath="0" atv="45" alpha="0.5" />
    <hotspot name="webvr_prev_scene" keep="true" style="skin_base|webvr_menu_style" crop="0|64|64|64"  ox="-64" onover="tween(scale,0.6);" onout="tween(scale,0.5);" vr_timeout="750" onclick="skin_nextscene_loop(-1);" visible="false" devices="html5.and.webgl" />
    <hotspot name="webvr_next_scene" keep="true" style="skin_base|webvr_menu_style" crop="64|64|64|64" ox="+64" onover="tween(scale,0.6);" onout="tween(scale,0.5);" vr_timeout="750" onclick="skin_nextscene_loop(+1);" visible="false" devices="html5.and.webgl" /> -->

    <!-- floating/following VR hotspots 
    <action name="webvr_menu_following" type="Javascript" devices="html5"><![CDATA[
        var hs1 = krpano.get("hotspot[webvr_prev_scene]");
        var hs2 = krpano.get("hotspot[webvr_next_scene]");
        if(!hs1.hovering && !hs2.hovering)
        {
            var f = 0.01;   // follow speed factor
            var h = krpano.view.hlookat;
            var v = krpano.view.vlookat;
            var hsh = hs1.ath;
            var hsv = hs1.atv;
            h   = (h  -(h|0))   + (((h|0)  +360180)%360) - 180.0;
            v   = (v  -(v|0))   + (((v|0)  +360180)%360) - 180.0;
            hsh = (hsh-(hsh|0)) + (((hsh|0)+360180)%360) - 180.0;
            var dh = h - hsh;
            dh += (dh > 180) ? -360 : (dh < -180) ? 360 : 0
            hsh += dh*f;
            var a = Math.abs(v - hsv) / 90.0;
            a = 1.0 * Math.max(1.0 - 2.0*Math.sqrt(a), 0);
            v = v + 55.0 - v*1.5;
            hsv = hsv*(1.0 - f) + v*f;
            hs1.ath = hs2.ath = hsh;
            hs1.atv = hs2.atv = hsv;
            hs1.alpha = hs2.alpha = a;
        }
    ]]></action>-->
    <!-- VR support -->


    <!-- 显示VR热点 -->
    <action name="showhotspot_enterVR">
        for(set(i,0), i LT hotspot.count, inc(i),
            if(hotspot[get(i)].isvr == true ,
                set(hotspot[get(i)].visible, true);
            );
        );

        <!-- 显示vr菜单 -->
        vr_menu_setvisibility(true);

        <!-- 创建环形vr缩略图 -->
        loadscene_vr();
    </action>

    <!-- 隐藏VR热点 -->
    <action name="hidehotspot_enterVR">
        for(set(i,0), i LT hotspot.count, inc(i),
            if(hotspot[get(i)].isvr == true ,
                set(hotspot[get(i)].visible, false);
            );
        );
        end_vr();
    </action>
</krpano>