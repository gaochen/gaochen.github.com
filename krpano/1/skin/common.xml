<krpano>
    <!-- 公共 krpano xml -->

    <!--<contextmenu>
        <item caption="云泊全景(www.yb720.com)" onclick="openurl('http://www.yb720.com');" />
    </contextmenu>-->
    <!-- 自定义属性 供全局调用 -->
    <!-- <skin_settings loading="鹦鹉美家..." design_skin_images="%SWFPATH%/images/vtourskin.png"/>  -->
    <!-- 自动旋转 -->
    <!-- <autorotate enabled="false" waittime="1.0" speed="-3.0" horizon="0.0" tofov="120.0" /> -->

    <!-- 跳转到指定name的场景 -->
    <action name="ac_gotoscene">
        loadscene(scene_pano_%1, null, MERGE, get(config.scene_change_type));
    </action>

    <!-- 显示loading -->
    <layer name="skin_loadingtext"  keep="true" url="%SWFPATH%/plugins/textfield.swf" align="center" x="5" y="-5" visible="false" autoheight="true" background="false" border="false" enabled="false" css="text-align:center; color:#FFFFFF; font-family:Helvetica;font-size:16px;letter-spacing:0.5px;" textshadow="1" />
    <action name="skin_showloading">
        set(layer[skin_loadingtext].html, get(skin_settings.loading));
        set(layer[skin_loadingtext].visible, %1);
    </action>


    <!-- 自动旋转 -->
    <action name="ac_autorotates">
        
        if(autorotate.enabled == true ,      
            set(autorotate.enabled,false);
            autorotate.stop()
            ,
            set(autorotate.enabled,true);
            trace(autorotate.enabled)
            <!-- autorotate.start(); -->
        );
    </action>

    <action name="ac_look_straight">
        if(view.vlookat LT -80 OR view.vlookat GT +80,
            tween(view.vlookat, 0.0, 1.0, easeInOutSine);
            tween(view.fov,     100, distance(150,0.8));
          );
    </action>

    <!-- 默认视角 -->
    <action name="ac_normal_view">
        ac_look_straight();
        tween(view.architectural, 0.0, distance(1.0,0.5));
        tween(view.pannini,       0.0, distance(1.0,0.5));
        tween(view.fisheye,       0.0, distance(1.0,0.5));
    </action>

    <!-- 小行星视角 -->
    <action name="ac_littleplanet_view">
        tween(view.architectural, 0.0, 0.25);
        tween(view.vlookat,  90, distance(179, 1.50), easeoutquad);
        set(backtonormalfirst,false);
        if(view.pannini       == true,  set(backtonormalfirst,true) );
        if(view.stereographic == false, set(backtonormalfirst,true) );
        if(backtonormalfirst, tween(view.fisheye, 0.0 ,distance(1.0, 0.25), easeoutquad, WAIT); );
        if(view.pannini, set(view.pannini,false); delayedcall(0,updateobject(true,true)); );
        set(view.stereographic, true);
        set(view.fovmax, 180);
        tween(view.fisheye, 1.0, distance(1.0, 0.75), easeoutquad);
        tween(view.fov,     160, distance(179, 0.75), easeoutquad); 
    </action>

    <!-- 鱼眼视角 -->
    <action name="ac_fisheye_view">
        ac_look_straight();
        tween(view.architectural, 0.0,  distance(1.0,0.5));
        tween(view.pannini,       0.0,  distance(1.0,0.5));
        tween(view.fisheye,       0.35, distance(1.0,0.5));
    </action>

    <!-- 小行星开场效果 -->
    <action name="ac_littleplanetintro">
        set(first_vlookatmin,get(view[0].vlookatmin));
        set(first_vlookatmax,get(view[0].vlookatmax));
        copy(lp_scene, xml.scene);copy(lp_hlookat, view.hlookat);copy(lp_vlookat, view.vlookat);copy(lp_fov, view.fov);copy(lp_fovmax, view.fovmax);copy(lp_limitview, view.limitview);set(view.fovmax, 170);set(view.limitview, lookto);set(view.vlookatmin, 90);set(view.vlookatmax, 90);lookat(calc(lp_hlookat - 180), 90, 150, 1, 0, 0);set(events[lp_events].onloadcomplete,delayedcall(0.1,   if(lp_scene === xml.scene,set(control.usercontrol, off);copy(view.limitview, lp_limitview);set(view.vlookatmin, null);set(view.vlookatmax, null);tween(view.hlookat|view.vlookat|view.fov|view.distortion, calc('' + lp_hlookat + '|' + lp_vlookat + '|' + lp_fov + '|' + 0.0),3.0, easeOutQuad,set(control.usercontrol, all);tween(view.fovmax, get(lp_fovmax));););););
    </action>


    <action name="bombtimer"> 
        set(autorotate.enabled,true); 
        set(bt,%1); 
        add(bt,1); 
        delayedcall(1,bombtimer(get(bt))); 
        copy(bt_1,autorotate.speed); 
        Math.abs(bt_1);
        div(bt_2,405,bt_1); 
        add(bt_2,autorotate.waittime); 
        if(bt GE bt_2, set(bt,0); nextscene();); 
   </action>

    <action name="skin_keydown_event">
        if(keycode == 33, skin_nextscene_loop(-1) );               <!-- Page Up   - previous scene -->
        if(keycode == 34, skin_nextscene_loop(+1) );               <!-- Page Dowm - next scene -->
        if(keycode == 35, skin_gotoscene(calc(scene.count-1)) );   <!-- End       - last scene -->
        if(keycode == 36, skin_gotoscene(0) );                     <!-- Home/Pos1 - first scene -->
    </action>


    <!-- skin_base - the base skin image -->
    <style name="skin_base" url="calc:vtourskinxmlpath.url + skin_settings.design_skin_images" />

    <!-- 皮肤事件 -->
    <events name="skin_events" keep="true"
        onxmlcomplete="set(events[skin_events].onxmlcomplete,null); startup();"
        onnewpano="skin_showloading(true); "
        onremovepano="skin_showloading(true);"
        onloadcomplete="skin_showloading(false);"
        onresize=""
    />
</krpano>